# Generated by Django 3.0.2 on 2020-01-31 16:12

import core.models_helper
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Exercicio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(blank=True, max_length=1024)),
                ('descricao', models.TextField(blank=True)),
                ('imagem', models.ImageField(blank=True, upload_to='exercicios/')),
                ('publicado', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExercicioProgramado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inicio', models.DateTimeField(default=django.utils.timezone.now, verbose_name='data inicio')),
                ('fim', models.DateTimeField(blank=True, null=True, verbose_name='data fim')),
                ('exercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Exercicio')),
            ],
            options={
                'verbose_name_plural': 'exercicios programados',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128)),
                ('slug', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['slug'],
            },
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=1024)),
                ('inicio', models.DateField(blank=True, null=True, verbose_name='data inicio')),
                ('fim', models.DateField(blank=True, null=True, verbose_name='data fim')),
            ],
            options={
                'ordering': ['inicio'],
            },
        ),
        migrations.CreateModel(
            name='ExercicioDeProgramacao',
            fields=[
                ('exercicio_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Exercicio')),
                ('testes', models.FileField(default=core.models_helper.criar_arquivo_de_testes_padrao, upload_to='arquivos_de_teste/')),
                ('nome_funcao', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'verbose_name_plural': 'exercicios de programacao',
            },
            bases=('core.exercicio',),
        ),
        migrations.CreateModel(
            name='RespostaExProgramacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_submissao', models.DateTimeField(auto_now_add=True, verbose_name='data submissao')),
                ('feedback', models.TextField(blank=True)),
                ('erros', models.TextField(blank=True)),
                ('codigo', models.FileField(upload_to=core.models_helper.caminho_submissoes_usuario)),
                ('resultado', models.CharField(blank=True, choices=[('ER', 'Erro'), ('OK', 'OK')], max_length=2)),
                ('deletado', models.BooleanField(default=False)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('exercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Exercicio')),
            ],
            options={
                'verbose_name_plural': 'respostas exercicios de programacao',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Prova',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inicio', models.DateTimeField(verbose_name='data inicial')),
                ('fim', models.DateTimeField(verbose_name='data final')),
                ('titulo', models.CharField(blank=True, max_length=1024)),
                ('descricao', models.TextField(blank=True)),
                ('slug', models.SlugField()),
                ('exercicios', models.ManyToManyField(to='core.ExercicioProgramado')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Turma')),
            ],
        ),
        migrations.AddField(
            model_name='exercicioprogramado',
            name='turma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Turma'),
        ),
        migrations.AddField(
            model_name='exercicio',
            name='tags',
            field=models.ManyToManyField(to='core.Tag'),
        ),
        migrations.CreateModel(
            name='Matricula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercicios_liberados', models.BooleanField(default=False)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Turma')),
            ],
            options={
                'unique_together': {('aluno', 'turma')},
            },
        ),
    ]
